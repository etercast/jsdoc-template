<?js
  let isGlobalPage;
  docs.forEach((doc, i) => {
?>

<?js
  // we only need to check this once
  if (typeof isGlobalPage === 'undefined') {
    isGlobalPage = (doc.kind === 'globalobj');
  }
?>

<?js if (doc.kind === 'mainpage' || (doc.kind === 'package')) { ?>
  <?js= this.partial('mainpage.tmpl', doc) ?>
<?js } else if (doc.kind === 'source') { ?>
  <?js= this.partial('source.tmpl', doc) ?>
<?js } else { ?>

<section>

  <header>
    <?js if (!doc.longname || doc.kind !== 'module') { ?>
      <h2>
        <?js if (doc.ancestors && doc.ancestors.length) { ?>
          <span class="ancestors"><?js= doc.ancestors.join('') ?></span>
        <?js } ?>
        <?js= doc.name ?>
        <?js if (doc.variation) { ?>
          <sup class="variation"><?js= doc.variation ?></sup>
        <?js } ?>
      </h2>
      <?js if (doc.classdesc) { ?>
        <div class="class-description"><?js= doc.classdesc ?></div>
      <?js } ?>
    <?js } else if (doc.kind === 'module' && doc.modules) { ?>
      <?js doc.modules.forEach((module) => { ?>
        <?js if (module.classdesc) { ?>
          <div class="class-description"><?js= module.classdesc ?></div>
        <?js } ?>
      <?js }) ?>
    <?js } ?>
  </header>

  <article>
    <div class="container-overview">
    <?js if (doc.kind === 'module' && doc.modules) { ?>
      <?js if (doc.description) { ?>
        <div class="description"><?js= doc.description ?></div>
      <?js } ?>

      <?js doc.modules.forEach((module) => { ?>
        <?js= this.partial('method.tmpl', module) ?>
      <?js }) ?>
    <?js } else if (doc.kind === 'class') { ?>
      <?js= this.partial('method.tmpl', doc) ?>
    <?js } else { ?>
      <?js if (doc.description) { ?>
        <div class="description"><?js= doc.description ?></div>
      <?js } ?>

      <?js= this.partial('details.tmpl', doc) ?>

      <?js if (doc.examples && doc.examples.length) { ?>
        <h3>Example<?js= doc.examples.length > 1? 's':'' ?></h3>
        <?js= this.partial('examples.tmpl', doc.examples) ?>
      <?js } ?>
    <?js } ?>
    </div>

    <?js if (doc.augments && doc.augments.length) { ?>
      <h3 class="subsection-title">Extends</h3>

      <?js= this.partial('augments.tmpl', doc) ?>
    <?js } ?>

    <?js if (doc.kind === 'module' && doc.requires && doc.requires.length) { ?>
      <h3 class="subsection-title">Requires</h3>

      <ul>
        <?js doc.requires.forEach((r) => { ?>
        <li><?js= this.linkto(r, r) ?></li>
        <?js }); ?>
      </ul>
    <?js } ?>

    <?js const classes = this.find({kind: 'class', memberof: doc.longname}); ?>
    <?js if (!isGlobalPage && classes && classes.length) { ?>
      <h3 class="subsection-title">Classes</h3>

      <dl><?js classes.forEach((c) => { ?>
          <dt><?js= this.linkto(c.longname, c.name) ?></dt>
          <dd><?js if (c.summary) { ?><?js= c.summary ?><?js } ?></dd>
      <?js }); ?></dl>
    <?js } ?>

    <?js const mixins = this.find({kind: 'mixin', memberof: doc.longname}); ?>
    <?js if (!isGlobalPage && mixins && mixins.length) { ?>
      <h3 class="subsection-title">Mixins</h3>

      <dl>
        <?js mixins.forEach((m) => { ?>
          <dt><?js= this.linkto(m.longname, m.name) ?></dt>
          <dd><?js if (m.summary) { ?><?js= m.summary ?><?js } ?></dd>
        <?js }); ?>
      </dl>
    <?js } ?>

    <?js const namespaces = this.find({kind: 'namespace', memberof: doc.longname}); ?>
    <?js if (!isGlobalPage && namespaces && namespaces.length) { ?>
      <h3 class="subsection-title">Namespaces</h3>

      <dl>
        <?js namespaces.forEach((n) => { ?>
          <dt><?js= this.linkto(n.longname, n.name) ?></dt>
          <dd><?js if (n.summary) { ?><?js= n.summary ?><?js } ?></dd>
        <?js }); ?>
      </dl>
    <?js } ?>

    <?js let members = this.find({kind: 'member', memberof: isGlobalPage ? {isUndefined: true} : doc.longname}); ?>
    <?js
      // symbols that are assigned to module.exports are not globals, even though they're not a memberof anything
      if (isGlobalPage && members && members.length && members.forEach) {
          members = members.filter((m) => {
              return m.longname && m.longname.indexOf('module:') !== 0;
          });
      }
      if (members && members.length && members.forEach) {
    ?>
      <h3 class="subsection-title">Members</h3>

      <?js members.forEach((p) => { ?>
          <?js= this.partial('members.tmpl', p) ?>
      <?js }); ?>
    <?js } ?>

    <?js const methods = this.find({kind: 'function', memberof: isGlobalPage ? {isUndefined: true} : doc.longname}); ?>
    <?js if (methods && methods.length && methods.forEach) { ?>
      <h3 class="subsection-title">Methods</h3>

      <?js methods.forEach((m) => { ?>
        <?js= this.partial('method.tmpl', m) ?>
      <?js }); ?>
    <?js } ?>

    <?js const typedefs = this.find({kind: 'typedef', memberof: isGlobalPage ? {isUndefined: true} : doc.longname}); ?>
    <?js if (typedefs && typedefs.length && typedefs.forEach) { ?>
      <h3 class="subsection-title">Type Definitions</h3>

      <?js typedefs.forEach((e) => { ?>
        <?js if (e.signature) { ?>
          <?js= this.partial('method.tmpl', e) ?>
        <?js } else { ?>
          <?js= this.partial('members.tmpl', e) ?>
        <?js } ?>
      <?js }); ?>
    <?js } ?>

    <?js
      const events = this.find({ kind: 'event', memberof: isGlobalPage ? { isUndefined: true } : doc.longname });
      if (events && events.length && events.forEach) {
    ?>
      <h3 class="subsection-title">Events</h3>
      <?js events.forEach((e) => { ?>
        <?js= this.partial('method.tmpl', e) ?>
      <?js }); ?>
    <?js } ?>
  </article>

</section>
<?js } ?>

<?js }); ?>
